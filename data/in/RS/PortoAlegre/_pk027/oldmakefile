## BASIC CONFIGS
pg_io  =/tmp/pg_io
orig   =/var/www/preserv.addressforall.org/download
pg_uri =postgres://postgres@localhost

## USER CONFIGS
pg_db  =ingest1

## ## ## ## ## ## ##
## THIS_MAKE, _pk027

pkid =27
need_commands   ="7z psql shp2pgsql" # and a prepared database

part1_file      =fbc62efdbd0f16a7db03b5b775c50c9425367a8dee8a85d9b53e4475bbdb99d2.zip
part1a_origname =NRO_IMOVEL
part1a_tabname  =pk027_p1_geoaddress
#part1b_name = outra parte do mesmo zip se existir

part2_file     =258772459588f7941ac6eeda7c6839df02d58741cf6bc3e48825aecd60418251.zip
part2a_origname =Bairros_LC12112_16

part3_file     =c35e3b2825d3da122a74c6c8dd5f3157a3bd6201208d2a6d13dec433a6ded9fc.zip
part3a_origname =EixosLogradouros

## COMPOSED VARS
pg_uri_db   =$(pg_uri)/$(pg_db)
part1_path  =$(orig)/$(part1_file)
part2_path  =$(orig)/$(part2_file)
part3_path  =$(orig)/$(part3_file)

all:
	@echo Favor consultar as opcoes de target. Requer comandos $(need_commands)

## ## ## ## ## ## ## ## ##
## Make targets of the Project AddressForAll:
# based on https://github.com/AddressForAll/digital-preservation/wiki/makefile-generator

geoaddress-novia:
	# pk027_p1 - ETL extrating to PostgreSQL/PostGIS the "geoaddress-novia" datatype (point with house_number but no via name)
	@echo "Creating table ingest.pk027_p1 on PostGIS"
	@whoami
	@echo "Run with tmux and sudo! (DANGER: seems not idempotent on psql)"
	mkdir -p $(pg_io)
	psql $(pg_uri_db) -c "DROP TABLE IF EXISTS $(part1a_tabname) CASCADE; DROP TABLE IF EXISTS ingest.pk027_p1 CASCADE;"
	@tput bold
	@echo Extraindo ....
	@tput sgr0
	cd $(pg_io) ; 7z e -y  $(part1_path) $(part1a_origname).* > /dev/null
	@echo "Conferindo se SRID esta configurado:"
	@( psql $(pg_uri_db) -c "SELECT srid, proj4text FROM spatial_ref_sys where srid=952013" )
	@echo Executando shp2pgsql ...
	@( cd $(pg_io) ; shp2pgsql -s 952013 $(part1a_origname).shp $(part1a_tabname) | psql -q $(pg_uri_db) 2> /dev/null  )
	@echo "Conferira se bate o perfil:  154067 | 112.28 |  0.81 | 12.24 |    11.65"
	psql $(pg_uri_db) -c "SELECT count(*) n, round(max(a),2) a_max, round(min(a),2) a_min, round(avg(a),2) a_avg, round(percentile_disc(0.5) WITHIN GROUP ( ORDER BY a),2) a_median FROM ( select  st_area(geom) a from $(part1a_tabname) ) t"
	psql $(pg_uri_db) -c "CREATE TABLE ingest.pk027_p1 AS select gid, setor, textstring as housenumber, ST_centroid(ST_Transform(geom,4326)) as geom FROM $(part1a_tabname)"
	@echo Limpando...
	rm $(pg_io)/$(part1a_origname).*
	psql $(pg_uri_db) -c "drop table $(part1a_tabname) cascade"
	@echo FIM.

etl_toPgis_eixos:
	@echo "Creating table ingest.pk027_eixo on PostGIS"
	@whoami
	@echo "Run with tmux and sudo! (DANGER: seems not idempotent on psql)"
	mkdir -p $(pg_io)
	@echo psql $(pg_uri_db) -c "drop table if exists ingest1.pk027_eixo cascade;"
	@tput bold
	@echo Extraindo ....
	@tput sgr0
	cd $(pg_io) ; 7z e -y  $(part3_path) $(part3a_origname).* > /dev/null
	@echo "Conferindo se SRID esta configurado:"
	@( psql $(pg_uri_db) -c "SELECT srid, proj4text FROM spatial_ref_sys where srid=952013" )
	@echo Executando shp2pgsql ...
	@( cd $(pg_io) ; shp2pgsql -s 952013 $(part3_path).shp eixos |  psql -q $(pg_uri_db) 2> /dev/null  )
	@echo "Conferira se bate o perfil:  154067 | 112.28 |  0.81 | 12.24 |    11.65"
	psql $(pg_uri_db) -c "SELECT count(*) n, round(max(a),2) a_max, round(min(a),2) a_min, round(avg(a),2) a_avg, round(percentile_disc(0.5) WITHIN GROUP ( ORDER BY a),2) a_median FROM ( select  st_area(geom) a from eixos ) t"
	psql $(pg_uri_db) -c "SELECT column_name, data_type FROM information_schema.columns WHERE table_name = 'eixos'"
	psql $(pg_uri_db) -c "CREATE TABLE ingest.pk027_eixos AS select gid, CDIDECAT, NMIDEPRE, NMIDELOG, NMIDEABR, NRIMPINI, NRIMPFIN, NRPARINI, NRPARFIN, ST_centroid(ST_Transform(geom,4326)) as geom FROM eixos"
	@echo Limpando...
	rm $(pg_io)/$(part3a_origname).*
	psql $(pg_uri_db) -c "drop table eixos cascade"
	@echo FIM.


etl_toPgis_bairros:
	@echo "Creating table ingest.pk027_bairros on PostGIS"
	@whoami
	@echo "Run with tmux and sudo! (DANGER: seems not idempotent on psql)"
	mkdir -p $(pg_io)
	@echo psql $(pg_uri_db) -c "drop table if exists ingest.pk027_bairros cascade;"
	@tput bold
	@echo Extraindo ....
	@tput sgr0
	cd $(pg_io) ; 7z e -y  $(part2_path) $(part2a_origname).* > /dev/null
	@echo Executando shp2pgsql ...
	@( cd $(pg_io) ; shp2pgsql -s 952013 $(part2a_origname).shp bairros | psql -q $(pg_uri_db) 2> /dev/null  )
	@echo "Conferira se bate o perfil:  154067 | 112.28 |  0.81 | 12.24 |    11.65"
	psql $(pg_uri_db) -c "SELECT count(*) n, round(max(a),2) a_max, round(min(a),2) a_min, round(avg(a),2) a_avg, round(percentile_disc(0.5) WITHIN GROUP ( ORDER BY a),2) a_median FROM ( select  st_area(geom) a from bairros ) t"
	psql $(pg_uri_db) -c "SELECT column_name, data_type FROM information_schema.columns WHERE table_name = 'bairros'"
	psql $(pg_uri_db) -c "CREATE TABLE ingest.pk027_p1 AS select gid, NOME, ST_centroid(ST_Transform(geom,4326)) as geom FROM bairros"
	@echo Limpando...
	rm $(pg_io)/$(part2a_name).*
	psql $(pg_uri_db) -c "drop table $(part1a_tabname) cascade"
	@echo FIM.
